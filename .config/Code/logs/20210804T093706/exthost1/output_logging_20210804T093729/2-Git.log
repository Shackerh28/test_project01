Looking for git in: git
Using git 2.20.1 from git
> git rev-parse --git-dir
Open repository: /home/samuelhawthorne5
> git fetch
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse new-change
> git log --format=%H%n%aN%n%aE%n%at%n%ct%n%P%n%B -z -n32 -- /home/samuelhawthorne5/portfolio2021/portfolio2021.css
> git log --format=%H%n%aN%n%aE%n%at%n%ct%n%P%n%B -z -n63 -- /home/samuelhawthorne5/portfolio2021/portfolio2021.css
> git rev-parse --symbolic-full-name new-change@{u}
> git rev-list --left-right new-change...refs/remotes/protect01/new-change
> git for-each-ref --sort -committerdate --format %(refname) %(objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git check-ignore -v -z --stdin
> git rev-list --count 9e89c0c4eacfbf8775a92a1c7bdcb4da72157fc6.. -- /home/samuelhawthorne5/portfolio2021/portfolio2021.css
> git show --textconv :portfolio2021/portfolio2021.css
> git ls-files --stage -- /home/samuelhawthorne5/portfolio2021/portfolio2021.css
> git symbolic-ref --short HEAD
> git cat-file -s afd07d8548258770529607286fb0c45e1b7ad5d2
> git log --format=%H%n%aN%n%aE%n%at%n%ct%n%P%n%B -z -n4 -- /home/samuelhawthorne5/portfolio2021/portfolio2021.css
> git rev-parse new-change
> git rev-parse --symbolic-full-name new-change@{u}
> git rev-list --left-right new-change...refs/remotes/protect01/new-change
> git for-each-ref --sort -committerdate --format %(refname) %(objectname)
> git remote --verbose
> git config --get commit.template
> git rev-list --count 9e89c0c4eacfbf8775a92a1c7bdcb4da72157fc6.. -- /home/samuelhawthorne5/portfolio2021/portfolio2021.css
> git log --format=%H%n%aN%n%aE%n%at%n%ct%n%P%n%B -z -n4 -- /home/samuelhawthorne5/portfolio2021/portfolio2021.css
> git fetch
> git status -z -u
> git check-ignore -v -z --stdin
> git symbolic-ref --short HEAD
> git rev-parse new-change
> git rev-parse --symbolic-full-name new-change@{u}
> git rev-list --left-right new-change...refs/remotes/protect01/new-change
> git for-each-ref --sort -committerdate --format %(refname) %(objectname)
> git remote --verbose
> git config --get commit.template
> git check-ignore -v -z --stdin
> git ls-files --stage -- /home/samuelhawthorne5/portfolio2021/portfolio2021.css
> git cat-file -s afd07d8548258770529607286fb0c45e1b7ad5d2
> git show --textconv :portfolio2021/portfolio2021.css
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse new-change
> git rev-parse --symbolic-full-name new-change@{u}
> git rev-list --left-right new-change...refs/remotes/protect01/new-change
> git for-each-ref --sort -committerdate --format %(refname) %(objectname)
> git remote --verbose
> git config --get commit.template
> git fetch
> git check-ignore -v -z --stdin
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse new-change
> git rev-parse --symbolic-full-name new-change@{u}
> git rev-list --left-right new-change...refs/remotes/protect01/new-change
> git for-each-ref --sort -committerdate --format %(refname) %(objectname)
> git remote --verbose
> git check-ignore -v -z --stdin
> git config --get commit.template
> git ls-files --stage -- /home/samuelhawthorne5/portfolio2021/portfolio2021.css
> git cat-file -s afd07d8548258770529607286fb0c45e1b7ad5d2
> git show --textconv :portfolio2021/portfolio2021.css
> git check-ignore -v -z --stdin
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse new-change
> git rev-parse --symbolic-full-name new-change@{u}
> git rev-list --left-right new-change...refs/remotes/protect01/new-change
> git for-each-ref --sort -committerdate --format %(refname) %(objectname)
> git remote --verbose
> git config --get commit.template
> git commit --quiet --allow-empty-message --file -
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse new-change
> git rev-parse --symbolic-full-name new-change@{u}
> git rev-list --left-right new-change...refs/remotes/protect01/new-change
> git for-each-ref --sort -committerdate --format %(refname) %(objectname)
> git remote --verbose
> git config --get commit.template
> git config --get commit.template
> git ls-files --stage -- /home/samuelhawthorne5/portfolio2021/portfolio2021.css
> git cat-file -s afd07d8548258770529607286fb0c45e1b7ad5d2
> git show --textconv :portfolio2021/portfolio2021.css
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse new-change
> git rev-parse --symbolic-full-name new-change@{u}
> git rev-list --left-right new-change...refs/remotes/protect01/new-change
> git for-each-ref --sort -committerdate --format %(refname) %(objectname)
> git remote --verbose
> git config --get commit.template
> git push protect01 new-change:new-change
Missing or invalid credentials.
Error: socket hang up
    at connResetException (internal/errors.js:570:14)
    at Socket.socketOnEnd (_http_client.js:440:23)
    at Socket.emit (events.js:228:7)
    at endReadableNT (_stream_readable.js:1185:12)
    at processTicksAndRejections (internal/process/task_queues.js:81:21) {
  code: 'ECONNRESET'
}
Missing or invalid credentials.
Error: socket hang up
    at connResetException (internal/errors.js:570:14)
    at Socket.socketOnEnd (_http_client.js:440:23)
    at Socket.emit (events.js:228:7)
    at endReadableNT (_stream_readable.js:1185:12)
    at processTicksAndRejections (internal/process/task_queues.js:81:21) {
  code: 'ECONNRESET'
}
remote: No anonymous write access.
fatal: Authentication failed for 'https://github.com/Shackerh28/test_project01.git/'
> git fetch
> git ls-files --stage -- /home/samuelhawthorne5/portfolio2021/portfolio2021.css
> git cat-file -s afd07d8548258770529607286fb0c45e1b7ad5d2
> git status -z -u
> git symbolic-ref --short HEAD
> git show --textconv :portfolio2021/portfolio2021.css
> git rev-parse new-change
> git rev-parse --symbolic-full-name new-change@{u}
> git rev-list --left-right new-change...refs/remotes/protect01/new-change
> git for-each-ref --sort -committerdate --format %(refname) %(objectname)
> git remote --verbose
> git ls-files --stage -- /home/samuelhawthorne5/portfolio2021/portfolio2021.css
> git config --get commit.template
> git cat-file -s afd07d8548258770529607286fb0c45e1b7ad5d2
> git show --textconv :portfolio2021/portfolio2021.css
> git push protect01 new-change:new-change
Missing or invalid credentials.
Error: socket hang up
    at connResetException (internal/errors.js:570:14)
    at Socket.socketOnEnd (_http_client.js:440:23)
    at Socket.emit (events.js:228:7)
    at endReadableNT (_stream_readable.js:1185:12)
    at processTicksAndRejections (internal/process/task_queues.js:81:21) {
  code: 'ECONNRESET'
}
Missing or invalid credentials.
Error: socket hang up
    at connResetException (internal/errors.js:570:14)
    at Socket.socketOnEnd (_http_client.js:440:23)
    at Socket.emit (events.js:228:7)
    at endReadableNT (_stream_readable.js:1185:12)
    at processTicksAndRejections (internal/process/task_queues.js:81:21) {
  code: 'ECONNRESET'
}
remote: No anonymous write access.
fatal: Authentication failed for 'https://github.com/Shackerh28/test_project01.git/'
> git fetch
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse new-change
> git rev-parse --symbolic-full-name new-change@{u}
> git rev-list --left-right new-change...refs/remotes/protect01/new-change
> git for-each-ref --sort -committerdate --format %(refname) %(objectname)
> git remote --verbose
> git config --get commit.template
> git ls-files --stage -- /home/samuelhawthorne5/portfolio2021/portfolio2021.css
> git cat-file -s afd07d8548258770529607286fb0c45e1b7ad5d2
> git show --textconv :portfolio2021/portfolio2021.css
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse new-change
> git rev-parse --symbolic-full-name new-change@{u}
> git rev-list --left-right new-change...refs/remotes/protect01/new-change
> git for-each-ref --sort -committerdate --format %(refname) %(objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse new-change
> git rev-parse --symbolic-full-name new-change@{u}
> git rev-list --left-right new-change...refs/remotes/protect01/new-change
> git for-each-ref --sort -committerdate --format %(refname) %(objectname)
> git remote --verbose
> git config --get commit.template
